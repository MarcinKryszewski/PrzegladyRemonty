// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrzegladyRemonty.Database.EntityFramework;

#nullable disable

namespace PrzegladyRemonty.Migrations
{
    [DbContext(typeof(PrzegladyRemontyDbContext))]
    partial class PrzegladyRemontyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.ActionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MyProperty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActionsCategories");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaintenanceDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MechanicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("MechanicId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Transporter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastMaintenance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Transporters");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.TransporterAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransporterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("TransporterId");

                    b.ToTable("TransportersActions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersPermissions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.WorkOrderMaintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaintenanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkOrderMaintenanceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceId");

                    b.HasIndex("WorkOrderId");

                    b.HasIndex("WorkOrderMaintenanceId");

                    b.ToTable("WorkOrdersMaintenances");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Area", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.Line", "Line")
                        .WithMany("Areas")
                        .HasForeignKey("LineId");

                    b.Navigation("Line");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Maintenance", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.TransporterAction", "Action")
                        .WithMany("Maintenances")
                        .HasForeignKey("ActionId");

                    b.HasOne("PrzegladyRemonty.Database.DTOs.User", "Mechanic")
                        .WithMany("Maintenances")
                        .HasForeignKey("MechanicId");

                    b.Navigation("Action");

                    b.Navigation("Mechanic");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Transporter", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.Area", "Area")
                        .WithMany("Transporters")
                        .HasForeignKey("AreaId");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.TransporterAction", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.ActionCategory", "Action")
                        .WithMany("TransporterActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzegladyRemonty.Database.DTOs.Transporter", "Transporter")
                        .WithMany("TransporterActions")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Transporter");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.UserPermission", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzegladyRemonty.Database.DTOs.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.WorkOrder", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.User", "User")
                        .WithMany("WorkOrders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.WorkOrderMaintenance", b =>
                {
                    b.HasOne("PrzegladyRemonty.Database.DTOs.Maintenance", "Maintenance")
                        .WithMany("WorkOrderMaintenances")
                        .HasForeignKey("MaintenanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzegladyRemonty.Database.DTOs.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzegladyRemonty.Database.DTOs.WorkOrderMaintenance", null)
                        .WithMany("WorkOrderMaintenances")
                        .HasForeignKey("WorkOrderMaintenanceId");

                    b.Navigation("Maintenance");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.ActionCategory", b =>
                {
                    b.Navigation("TransporterActions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Area", b =>
                {
                    b.Navigation("Transporters");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Line", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Maintenance", b =>
                {
                    b.Navigation("WorkOrderMaintenances");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Permission", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.Transporter", b =>
                {
                    b.Navigation("TransporterActions");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.TransporterAction", b =>
                {
                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.User", b =>
                {
                    b.Navigation("Maintenances");

                    b.Navigation("UserPermissions");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("PrzegladyRemonty.Database.DTOs.WorkOrderMaintenance", b =>
                {
                    b.Navigation("WorkOrderMaintenances");
                });
#pragma warning restore 612, 618
        }
    }
}
